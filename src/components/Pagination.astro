---
import { BASE } from "../config.json";
import PaginationNumber from "./PaginationNumber.astro";

type Props = {
  total: number;
  current: number;
  tag?: string;
};

const { total, current, tag } = Astro.props;

function getVisiblePages(total: number, current: number): Array<number | null> {
  if (total < 1) {
    throw new Error("Total pages must be at least 1.");
  }
  if (current < 1 || current > total) {
    throw new Error("Current page must be within the range of total pages.");
  }

  const pages = new Set<number>();

  // Always include first two pages
  pages.add(1);
  if (total >= 2) {
    pages.add(2);
  }

  // Always include last two pages
  if (total > 2) {
    pages.add(total - 1);
  }
  pages.add(total);

  // Include current, one before and one after
  pages.add(current);
  if (current - 1 >= 1) {
    pages.add(current - 1);
  }
  if (current + 1 <= total) {
    pages.add(current + 1);
  }

  // Convert set to sorted array
  const sortedPages = Array.from(pages).sort((a, b) => a - b);

  const result: Array<number | null> = [];
  let previousPage: number | null = null;

  for (const page of sortedPages) {
    if (previousPage !== null) {
      if (page - previousPage === 1) {
        // Consecutive page, no gap
      } else {
        // Gap detected, insert null
        result.push(null);
      }
    }
    result.push(page);
    previousPage = page;
  }
  // reverse order
  return result;
}
---

<nav
  class="flex items-center justify-between border-t border-base-200 dark:border-base-800 px-4 sm:px-0 mt-8 mx-4"
>
  <div class="-mt-px flex w-0 flex-1">
    {
      current > 1 ? (
        <a
          href={
            tag
              ? BASE + "/tags/" + tag + "/" + (current - 1)
              : BASE + "/pages/" + (current - 1)
          }
          class="inline-flex items-center border-t-2 border-transparent pr-1 pt-4 text-sm font-medium text-base-500 hover:border-base-300 hover:text-base-700 dark:text-base-400 dark:hover:border-base-700 dark:hover:text-base-300"
        >
          <svg
            class="mr-3 h-5 w-5 text-base-400"
            viewBox="0 0 20 20"
            fill="currentColor"
            aria-hidden="true"
            data-slot="icon"
          >
            <path
              fill-rule="evenodd"
              d="M18 10a.75.75 0 0 1-.75.75H4.66l2.1 1.95a.75.75 0 1 1-1.02 1.1l-3.5-3.25a.75.75 0 0 1 0-1.1l3.5-3.25a.75.75 0 1 1 1.02 1.1l-2.1 1.95h12.59A.75.75 0 0 1 18 10Z"
              clip-rule="evenodd"
            />
          </svg>
          newer
        </a>
      ) : null
    }
  </div>

  <div class="hidden md:-mt-px md:flex">
    {
      getVisiblePages(total, current).map((page) => {
        if (page === null) {
          return (
            <span class="inline-flex items-center border-t-2 border-transparent px-4 pt-4 text-sm font-medium text-base-500">
              ...
            </span>
          );
        }

        return (
          <PaginationNumber tag={tag} index={page} active={current === page} />
        );
      })
    }
  </div>

  <div class="-mt-px flex w-0 flex-1 justify-end">
    {
      current < total ? (
        <a
          href={
            tag
              ? BASE + "/tags/" + tag + "/" + (current + 1)
              : BASE + "/pages/" + (current + 1)
          }
          class="inline-flex items-center border-t-2 border-transparent pr-1 pt-4 text-sm font-medium text-base-500 hover:border-base-300 hover:text-base-700 dark:text-base-400 dark:hover:border-base-700 dark:hover:text-base-300"
        >
          older
          <svg
            class="ml-3 h-5 w-5 text-base-400"
            viewBox="0 0 20 20"
            fill="currentColor"
            aria-hidden="true"
            data-slot="icon"
          >
            <path
              fill-rule="evenodd"
              d="M2 10a.75.75 0 0 1 .75-.75h12.59l-2.1-1.95a.75.75 0 1 1 1.02-1.1l3.5 3.25a.75.75 0 0 1 0 1.1l-3.5 3.25a.75.75 0 1 1-1.02-1.1l2.1-1.95H2.75A.75.75 0 0 1 2 10Z"
              clip-rule="evenodd"
            />
          </svg>
        </a>
      ) : null
    }
  </div>
</nav>
